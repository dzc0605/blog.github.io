(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{214:function(r,a,e){"use strict";e.r(a);var n=e(2),t=Object(n.a)({},function(){var r=this,a=r.$createElement,e=r._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":r.$parent.slotKey}},[e("h1",{attrs:{id:"array"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#array","aria-hidden":"true"}},[r._v("#")]),r._v(" Array")]),r._v(" "),e("p",[r._v("JavaScript 的 "),e("code",[r._v("Array")]),r._v(" 可以包含任意数据类型，并通过索引来访问每个元素。")]),r._v(" "),e("p",[r._v("要取得 "),e("code",[r._v("Array")]),r._v(" 的长度，直接访问 "),e("code",[r._v("length")]),r._v(" 属性，直接给 "),e("code",[r._v("Array")]),r._v(" 的 "),e("code",[r._v("length")]),r._v(" 赋一个新的值会导致 "),e("code",[r._v("Array")]),r._v(" 大小的变化")]),r._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[r._v("var arr = [1, 2, 3, 'Hello', null, true];\narr.length; // 6\n\narr.length = 3;\narr; // arr变为[1, 2, 3]\n")])])]),e("h3",{attrs:{id:"indexof"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#indexof","aria-hidden":"true"}},[r._v("#")]),r._v(" indexOf")]),r._v(" "),e("p",[r._v("与 "),e("code",[r._v("String")]),r._v(" 类似， "),e("code",[r._v("Array")]),r._v(" 也可以通过 "),e("code",[r._v("indexOf()")]),r._v(" 来搜索一个指定的元素的位置：")]),r._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[r._v("var arr = [10, 20, '30', 'xyz'];\narr.indexOf(10); // 元素10的索引为0\narr.indexOf('30'); // 元素'30'的索引为2\n")])])]),e("h3",{attrs:{id:"slice"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#slice","aria-hidden":"true"}},[r._v("#")]),r._v(" slice")]),r._v(" "),e("p",[e("code",[r._v("slice()")]),r._v(" 就是对应 "),e("code",[r._v("String")]),r._v(" 的 "),e("code",[r._v("substring()")]),r._v(" 版本，它截取"),e("code",[r._v("Array")]),r._v("的部分元素，然后返回一个新的"),e("code",[r._v("Array")]),r._v("，注意到 "),e("code",[r._v("slice()")]),r._v(" 的起止参数包括开始索引，不包括结束索引。")]),r._v(" "),e("p",[r._v("如果不给"),e("code",[r._v("slice()")]),r._v("传递任何参数，它就会从头到尾截取所有元素。利用这一点，我们可以很容易地复制一个"),e("code",[r._v("Array")]),r._v("：")]),r._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[r._v("var arr = ['A', 'B', 'C', 'D', 'E', 'F', 'G'];\narr.slice(0, 3); // 从索引0开始，到索引3结束，但不包括索引3: ['A', 'B', 'C']\narr.slice(3); // 从索引3开始到结束: ['D', 'E', 'F', 'G']\n\nvar arr = ['A', 'B', 'C', 'D', 'E', 'F', 'G'];\nvar aCopy = arr.slice();\naCopy; // ['A', 'B', 'C', 'D', 'E', 'F', 'G']\naCopy === arr; // false\n")])])]),e("h3",{attrs:{id:"push和pop"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#push和pop","aria-hidden":"true"}},[r._v("#")]),r._v(" push和pop")]),r._v(" "),e("p",[e("code",[r._v("push()")]),r._v("向"),e("code",[r._v("Array")]),r._v("的末尾添加若干元素，"),e("code",[r._v("pop()")]),r._v("则把"),e("code",[r._v("Array")]),r._v("的最后一个元素删除掉：")]),r._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[r._v("var arr = [1, 2];\narr.push('A', 'B'); // 返回Array新的长度: 4\narr; // [1, 2, 'A', 'B']\narr.pop(); // pop()返回'B'\narr; // [1, 2, 'A']\n")])])]),e("h3",{attrs:{id:"unshift-和-shift"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#unshift-和-shift","aria-hidden":"true"}},[r._v("#")]),r._v(" unshift 和 shift")]),r._v(" "),e("p",[r._v("如果要往"),e("code",[r._v("Array")]),r._v("的头部添加若干元素，使用"),e("code",[r._v("unshift()")]),r._v("方法，"),e("code",[r._v("shift()")]),r._v("方法则把"),e("code",[r._v("Array")]),r._v("的第一个元素删掉：")]),r._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[r._v("var arr = [1, 2];\narr.unshift('A', 'B'); // 返回Array新的长度: 4\narr; // ['A', 'B', 1, 2]\narr.shift(); // 'A'\narr; // ['B', 1, 2]\n")])])]),e("h3",{attrs:{id:"sort"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sort","aria-hidden":"true"}},[r._v("#")]),r._v(" sort")]),r._v(" "),e("p",[e("code",[r._v("sort()")]),r._v("可以对当前"),e("code",[r._v("Array")]),r._v("进行排序，它会直接修改当前"),e("code",[r._v("Array")]),r._v("的元素位置，直接调用时，按照默认顺序排序：")]),r._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[r._v("var arr = ['B', 'C', 'A'];\narr.sort();\narr; // ['A', 'B', 'C']\n")])])]),e("p",[e("code",[r._v("sort")]),r._v(" 排序是根据字符串的"),e("code",[r._v("ASCII")]),r._v("码进行排序，默认把所有元素先转换为"),e("code",[r._v("String")]),r._v("再排序，幸运的是，"),e("code",[r._v("sort()")]),r._v("方法也是一个高阶函数，它还可以接收一个比较函数来实现自定义的排序。")]),r._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[r._v("// sort 排序的bug:\nvar arr = [10, 20, 1, 2];\narr.sort(); // [1, 10, 2, 20]\n\nvar arr1 = ['A','e','a','E','h','H'];\narr1.sort(); //  ['A', 'E', 'H', 'a','e', 'h']\n\n// 解决方式\n// 数字排序\narr.sort(function (x, y) {\n    if (x < y) {\n        return -1;\n    }\n    if (x > y) {\n        return 1;\n    }\n    return 0;\n}); // [1, 2, 10, 20]\n\n// 可以使用es6箭头函数简化为 arr.sort((x, y) => x - y);\n\narr.sort(function (s1, s2) {\n    x1 = s1.toUpperCase();\n    x2 = s2.toUpperCase();\n    if (x1 < x2) {\n        return -1;\n    }\n    if (x1 > x2) {\n        return 1;\n    }\n    return 0;\n});\n// [\"A\", \"a\", \"E\", \"e\", \"H\", \"h\"]\n")])])]),e("h3",{attrs:{id:"reverse"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#reverse","aria-hidden":"true"}},[r._v("#")]),r._v(" reverse")]),r._v(" "),e("p",[e("code",[r._v("reverse()")]),r._v("把整个"),e("code",[r._v("Array")]),r._v("的元素给掉个个，也就是反转：")]),r._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[r._v("var arr = ['one', 'two', 'three'];\narr.reverse();\narr; // ['three', 'two', 'one']\n")])])]),e("h3",{attrs:{id:"splice"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#splice","aria-hidden":"true"}},[r._v("#")]),r._v(" splice")]),r._v(" "),e("p",[e("code",[r._v("splice()")]),r._v("方法是修改"),e("code",[r._v("Array")]),r._v("的“万能方法”，它可以从指定的索引开始删除若干元素，然后再从该位置添加若干元素：")]),r._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[r._v("var arr = ['Microsoft', 'Apple', 'Yahoo', 'AOL', 'Excite', 'Oracle'];\n// 从索引2开始删除3个元素,然后再添加两个元素:\narr.splice(2, 3, 'Google', 'Facebook'); // 返回删除的元素 ['Yahoo', 'AOL', 'Excite']\narr; // ['Microsoft', 'Apple', 'Google', 'Facebook', 'Oracle']\n// 只删除,不添加:\narr.splice(2, 2); // ['Google', 'Facebook']\narr; // ['Microsoft', 'Apple', 'Oracle']\n// 只添加,不删除:\narr.splice(2, 0, 'Google', 'Facebook'); // 返回[],因为没有删除任何元素\narr; // ['Microsoft', 'Apple', 'Google', 'Facebook', 'Oracle']\n")])])]),e("h3",{attrs:{id:"concat"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#concat","aria-hidden":"true"}},[r._v("#")]),r._v(" concat")]),r._v(" "),e("p",[e("code",[r._v("concat()")]),r._v("方法把当前的"),e("code",[r._v("Array")]),r._v("和另一个"),e("code",[r._v("Array")]),r._v("连接起来，并返回一个新的"),e("code",[r._v("Array")]),r._v("，并且，concat()方法可以接收任意个元素和Array，并且自动把Array拆开，然后全部添加到新的Array里：")]),r._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[r._v("var arr = ['A', 'B', 'C'];\nvar added = arr.concat([1, 2, 3]);\nadded; // ['A', 'B', 'C', 1, 2, 3];\n\narr; // ['A', 'B', 'C']   // 原数组未改变\n\nvar arr1 = ['A', 'B', 'C'];\narr1.concat(1, 2, [3, 4]); // ['A', 'B', 'C', 1, 2, 3, 4]\n")])])]),e("h3",{attrs:{id:"join"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#join","aria-hidden":"true"}},[r._v("#")]),r._v(" join")]),r._v(" "),e("p",[e("code",[r._v("join()")]),r._v("方法是一个非常实用的方法，它把当前"),e("code",[r._v("Array")]),r._v("的每个元素都用指定的字符串连接起来，然后返回连接后的字符串，"),e("code",[r._v("join()")]),r._v("默认以"),e("code",[r._v(",")]),r._v("分隔：")]),r._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[r._v("var arr = ['A', 'B', 'C', 1, 2, 3];\narr.join('-'); // 'A-B-C-1-2-3'\narr.join(); // 'A,B,C,1,2,3'\n")])])]),e("h3",{attrs:{id:"多维数组"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#多维数组","aria-hidden":"true"}},[r._v("#")]),r._v(" 多维数组")]),r._v(" "),e("p",[r._v("如果数组"),e("code",[r._v("Array")]),r._v("的某个元素又是一个"),e("code",[r._v("Array")]),r._v("，则可以形成多维数组，例如：")]),r._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[r._v("var array = [1, 2, [33, 44, [555, 666], 77, [888]], 9];\n")])])]),e("h4",{attrs:{id:"多维数组降纬操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#多维数组降纬操作","aria-hidden":"true"}},[r._v("#")]),r._v(" 多维数组降纬操作")]),r._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[r._v("var array = [1, 2, [33, 44, [555, 666], 77, [888]], 9];\n\n// 多维数组降纬1\nconst flattenDeep = arr => Array.isArray(arr) ? arr.reduce( (a, b) => [...a, ...flattenDeep(b)] , []) : [arr]\n// 多维数组降纬2\nconst newArr = arr =>  arr.reduce((pre, cur) => pre.concat(Array.isArray(cur) ? newArr(cur) : cur), []);\n\nflattenDeep(array); // [1, 2, 33, 44, 555, 666, 77, 888, 9];\nnewArr(array); // [1, 2, 33, 44, 555, 666, 77, 888, 9];\n")])])]),e("h3",{attrs:{id:"常用操作数组方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#常用操作数组方法","aria-hidden":"true"}},[r._v("#")]),r._v(" 常用操作数组方法")]),r._v(" "),e("ol",[e("li",[r._v("数组去重")])]),r._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[r._v("let arr = [1,2,1,2,3,5,4,5,3,4,4,4,4];\n\n// Example1:\nconst distinct = arr => arr.sort().reduce( (init, current) => {\n\n  if (init.length === 0 || init[init.length - 1] !== current) {\n      init.push( current );\n  }\n  return init;\n}, []);\ndistinct(arr); // [1, 2, 3, 4, 5];\n\n\n// Example2:\nconst distinct = arr => arr.filter( (element, index, self) => {\n  return self.indexOf( element ) === index;\n});\ndistinct(arr); // [1, 2, 3, 5, 4]\n\n\n// Example3:\nlet oldArr = [1, 1, 1, 2, 3, 2, 4, 4, 4, 9, 9, 0, 0, NaN, NaN];\nlet newArr = Array.from(new Set(oldArr));\nconsole.log(newArr);  // [1, 2, 3, 4, 9, 0, NaN]\n\n// Example4:\nfunction arrays(arr) {\n\tvar obj = {};\n\tvar arr1 = [];\n\tfor (i=0;i<arr.length;i++) {\n\t\tif (!obj[arr[i]]){\n\t\t\tobj[arr[i]] = 1;\n\t\t\tarr1.push(arr[i])\n\t\t}\n\t}\n\treturn arr1;\n}\narrays(arr); // [1, 2, 3, 5, 4]\n")])])]),e("ol",{attrs:{start:"2"}},[e("li",[r._v("排序")])]),r._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[r._v("let arr = [10, 20, 1, 2];\n\n// Example1:\narray.sort((a,b) => a-b); // [1, 2, 10, 20]\n\n// 冒泡排序\nvar bubbleSort = function(arr) {\n    var len = arr.length;\n    for(var i = 0; i < len; i++){\n        for(var j = 0; j < len - 1 - i; j++){\n            if(arr[j] > arr[j+1]) {//相邻元素两两对比\n                var temp = arr[j+1];//元素交换\n                arr[j+1] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    return arr;\n}\n\n// 插入排序\nvar insertSort = function(arr) {\n    var len = arr.length;\n    var preIndex, current;\n    for(var i = 1; i < len; i++){\n        preIndex = i - 1;\n        current = arr[i];\n      if(preIndex >= 0 && arr[preIndex] > current){\n            arr[preIndex + 1] = arr[preIndex];\n            preIndex--;\n        }\n        arr[preIndex + 1] = current;\n    }\n    return arr;\n}\n\n\n// 快速排序\nfunction quickSort(arr){\n  if(arr.length<=1){\n    return arr;\n  }\n  var index = Math.floor(arr.length/2);   //定义中间值的索引\n  var temp = arr.splice(index,1); //取到中间值\n  //定义左右部分数组\n  var left = [];\n  var right = [];\n  for(var i=0;i<arr.length;i++){\n    //如果元素比中间值小，那么放在左边，否则放右边\n    if(arr[i]<temp){\n      left.push(arr[i]);\n    }else{\n      right.push(arr[i]);\n    }\n  }\n  return quickSort(left).concat(temp,quickSort(right));\n}\n")])])])])},[],!1,null,null,null);a.default=t.exports}}]);